services:
  db:
    image: postgres:16-alpine
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: Europe/Moscow
    volumes:
      - pg_data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "5432:5432"
    networks: [app_network]
    restart: unless-stopped

  # (опционально) redis, если нужен
  # redis:
  #   image: redis:7-alpine
  #   networks: [app_network]
  #   restart: unless-stopped

  bot3:
    build:
      context: .
      dockerfile: Dockerfile.bot_cian
    env_file:
      - .env
    environment:
      TZ: Europe/Moscow
      # Chromium из образа:
      CHROME_BIN: /usr/bin/chromium
      # Если хочешь подсказать мажорную версию драйвера:
      UC_VERSION_MAIN: "141"
      # В контейнере Headless + безопасные флаги
      CHROME_EXTRA_ARGS: "--no-sandbox --disable-dev-shm-usage --disable-gpu --disable-software-rasterizer --window-size=1920,1080 --disable-blink-features=AutomationControlled --headless=new"
      # Чтобы код мог знать, что мы в контейнере (не обязательно, но удобно)
      IN_DOCKER: "1"
    volumes:
      # большой /dev/shm устраняет краши в headless-хроме
      - /dev/shm:/dev/shm
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - db
      # - redis
    networks: [app_network]
    restart: unless-stopped
    # при желании: ограничение ресурсов
    # deploy:
    #   resources:
    #     limits: { cpus: "1.0", memory: "1024M" }

networks:
  app_network:
    driver: bridge

volumes:
  pg_data:
