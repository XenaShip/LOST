version: '3.8'

services:
  db:
    image: postgres:16-alpine
    networks:
      - app_network
    restart: on-failure
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 30s

  bot1:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile.bot
    networks:
      - app_network
    tty: true
    command: sh -c "sleep 5 && python manage.py migrate && python bot.py"
    depends_on:
      db:
        condition: service_healthy
    container_name: bot1_container
    restart: unless-stopped
    shm_size: '2gb'

  bot2:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile.bot_3_2
    networks:
      - app_network
    tty: true
    command: sh -c "python manage.py migrate && python bot_3_2.py"
    depends_on:
      db:
        condition: service_healthy
    container_name: bot2_container
    restart: unless-stopped

  bot3:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile.bot_cian
    networks:
      - app_network
    tty: true
    command: sh -c "python manage.py migrate && python bot_cian.py"
    depends_on:
      db:
        condition: service_healthy
    container_name: bot3_container
    restart: unless-stopped
    environment:
      - CHROME_BIN=/usr/bin/google-chrome
      - CHROME_DRIVER=/usr/local/bin/chromedriver
      - DISPLAY=:99
    shm_size: '2gb'
    volumes:
      - /dev/shm:/dev/shm

networks:
  app_network:
    driver: bridge

volumes:
  pg_data: