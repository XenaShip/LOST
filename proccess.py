import logging
import os
logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)

from yandex_cloud_ml_sdk import YCloudML


def process_text_with_gpt(text):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ Yandex GPT –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞"""
    sdk = YCloudML(
        folder_id=os.getenv("FOLDER_ID"),
        auth=os.getenv("AUTH"),
    )
    model = sdk.models.completions("yandexgpt")
    # Variant 1: wait for the operation to complete using 5-second sleep periods

    messages_1 = [
        {
            "role": "system",
            "text": """
                –í—ã‚Äî –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ–± –∞—Ä–µ–Ω–¥–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –∏–ª–∏ –∫–æ–º–Ω–∞—Ç—ã –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω.

                –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º –æ–± –∞—Ä–µ–Ω–¥–µ –∏–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –µ—Å—Ç—å –∏–º—è –õ–∏–¥–∏—è –õ–∏—Ö–∞–Ω—Å–∫–∞—è, –ø—Ä–æ—Å—Ç–æ –≤–µ—Ä–Ω–∏—Ç–µ —Å–ª–æ–≤–æ –Ω–µ—Ç.

                –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ–± –∞—Ä–µ–Ω–¥–µ, –≤—ã–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (–∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞‚Äî –Ω–æ–≤—ã–π –ø—É–Ω–∫—Ç):

                üè† –ö–æ–º–Ω–∞—Ç—ã: <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç*>
                üí∞ –¶–µ–Ω–∞: <—Ü–µ–Ω–∞ + —É—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã*>
                üìç –ê–¥—Ä–µ—Å: <—É–ª–∏—Ü–∞, –º–µ—Ç—Ä–æ –∏–ª–∏ —Ä–∞–π–æ–Ω*>
                ‚öôÔ∏è –£—Å–ª–æ–≤–∏—è: <–¥–∞—Ç–∞ –∑–∞—Å–µ–ª–µ–Ω–∏—è, –ø—Ä–æ—á–∏–µ —É—Å–ª–æ–≤–∏—è*>
                üìù –û–ø–∏—Å–∞–Ω–∏–µ: <–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, —Ä—è–¥–æ–º –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è>

                –ù–∏—á–µ–≥–æ –±–æ–ª—å—à–µ –Ω–µ –¥–æ–±–∞–≤–ª—è–π—Ç–µ: –Ω–∏ ¬´–ö–æ–Ω—Ç–∞–∫—Ç—ã:¬ª, –Ω–∏ –ª–∏—à–Ω–∏—Ö —ç–º–æ–¥–∑–∏, –Ω–∏ —Å—Å—ã–ª–æ–∫. '*' - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª –≤ —à–∞–±–ª–æ–Ω–µ
                """,
        },
        {
            "role": "user",
            "text": text,
        },
    ]
    result = (
        sdk.models.completions("yandexgpt").configure(temperature=0.5).run(messages_1)
    )
    return result.text


def process_text_with_gpt3(text):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ Yandex GPT –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞"""
    sdk = YCloudML(
        folder_id=os.getenv("FOLDER_ID"),
        auth=os.getenv("AUTH"),
    )
    model = sdk.models.completions("yandexgpt")
    # Variant 1: wait for the operation to complete using 5-second sleep periods

    messages_1 = [
        {
            "role": "system",
            "text": """
                –í—ã ‚Äî –Ω–∞–¥—ë–∂–Ω—ã–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ–±—ä—è–≤–ª–µ–Ω–∏–π –æ–± –∞—Ä–µ–Ω–¥–µ –∫–≤–∞—Ä—Ç–∏—Ä –∏ –∫–æ–º–Ω–∞—Ç –≤ –ú–æ—Å–∫–≤–µ.
                –í–∞—à–µ–π –∑–∞–¥–∞—á–µ–π —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å: —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç **–æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º –æ–± –∞—Ä–µ–Ω–¥–µ** (—Å–¥–∞—ë—Ç—Å—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –∏–ª–∏ –∫–æ–º–Ω–∞—Ç–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º –ª–∏—Ü–æ–º, –±–µ–∑ —Ä–µ–∫–ª–∞–º—ã –∞–≥–µ–Ω—Ç—Å—Ç–≤ –∏ –±–µ–∑ –ø—Ä–æ–¥–∞–∂–∏). 

                –ö—Ä–∏—Ç–µ—Ä–∏–∏ ¬´–∞—Ä–µ–Ω–¥–∞¬ª:
                - –í —Ç–µ–∫—Å—Ç–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å–ª–æ–≤–∞ ¬´—Å–¥–∞—ë—Ç—Å—è¬ª, ¬´—Å–¥–∞—é—Ç—Å—è¬ª, ¬´—Å–¥–∞—é¬ª, ¬´–∞—Ä–µ–Ω–¥–∞¬ª, ¬´–∞—Ä–µ–Ω–¥—É—é¬ª.
                - –£–∫–∞–∑–∞–Ω–∞ —Ü–µ–Ω–∞ –∏–ª–∏ –¥–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω.
                - –ï—Å—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç (—Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ Telegram‚Äë—Å—Å—ã–ª–∫–∏).
                - –ù–µ—Ç —Å–ª–æ–≤ ¬´–ø—Ä–æ–¥–∞—ë—Ç—Å—è¬ª, ¬´–ø—Ä–æ–¥–∞—é¬ª, ¬´–≤ –ø—Ä–æ–¥–∞–∂—É¬ª, ¬´–ø—Ä–æ–¥–∞–∂–∞¬ª, ¬´–∏—â—É –∫–≤–∞—Ä—Ç–∏—Ä—É¬ª, ¬´—Ä–µ–∑—é–º–µ¬ª.

                **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è**:  
                ‚Äì –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç **—è–≤–ª—è–µ—Ç—Å—è** –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º –æ–± –∞—Ä–µ–Ω–¥–µ ‚Äî –æ—Ç–≤–µ—Ç—å—Ç–µ —Ä–æ–≤–Ω–æ `–î–∞`.  
                ‚Äì –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç **–Ω–µ —è–≤–ª—è–µ—Ç—Å—è** –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º –æ–± –∞—Ä–µ–Ω–¥–µ –∏–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –µ—Å—Ç—å –∏–º—è '–õ–∏–¥–∏—è –õ–∏—Ö–∞–Ω—Å–∫–∞—è' ‚Äî –æ—Ç–≤–µ—Ç—å—Ç–µ —Ä–æ–≤–Ω–æ `–ù–µ—Ç`.  
                ‚Äì –ù–∏—á–µ–≥–æ –±–æ–ª—å—à–µ –Ω–µ –≤—ã–≤–æ–¥–∏—Ç–µ, —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —Å–ª–æ–≤–æ (—Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã).
                """,
        },
        {
            "role": "user",
            "text": text,
        },
    ]
    result = (
        sdk.models.completions("yandexgpt").configure(temperature=0.5).run(messages_1)
    )
    return result.text


def text_with_gpt(text):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ Yandex GPT –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞"""
    sdk = YCloudML(
        folder_id=os.getenv("FOLDER_ID"),
        auth=os.getenv("AUTH"),
    )
    model = sdk.models.completions("yandexgpt")
    # Variant 1: wait for the operation to complete using 5-second sleep periods

    messages_1 = [
        {
            "role": "system",
            "text": "–∫–∞–∫–æ–π —Å–µ–≥–æ–¥–Ω—è –≥–æ–¥?",
        },
        {
            "role": "user",
            "text": text,
        },
    ]
    result = (
        sdk.models.completions("yandexgpt").configure(temperature=0.5).run(messages_1)
    )
    return result.text


def process_text_with_gpt2(text):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ Yandex GPT –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞"""
    sdk = YCloudML(
        folder_id=os.getenv("FOLDER_ID"),
        auth=os.getenv("AUTH"),
    )
    model = sdk.models.completions("yandexgpt")
    # Variant 1: wait for the operation to complete using 5-second sleep periods

    messages_1 = [
        {
            "role": "system",
            "text": "–ò–∑–≤–ª–µ–∫–∞–π –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ —Ç–µ–∫—Å—Ç–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–π –µ—ë –≤ —á–∏—Å—Ç—É—é Telegram-—Å—Å—ã–ª–∫—É. –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ü–∏–∞–Ω, —Ç–æ –æ—Å—Ç–∞–≤–ª—è–π —Å—Å—ã–ª–∫—É —Ç–∞–∫–æ–π –∂–µ .–ù–ï –£–ö–ê–ó–´–í–ê–ô –°–°–´–õ–ö–ò –ù–ê –î–†–£–ì–ò–ï –†–ï–°–£–†–°–´ –ò –ö–ê–ù–ê–õ–´, –ë–û–¢–û–í, –¢–û–õ–¨–ö–û –ù–ê –ü–†–û–§–ò–õ–¨ "
                    "–ü—Ä–∞–≤–∏–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:\n"
                    "1. –ï—Å–ª–∏ –Ω–∞–π–¥–µ—à—å —Ñ—Ä–∞–∑—ã '–Ω–∞–ø–∏—Å–∞—Ç—å', '–∫–æ–Ω—Ç–∞–∫—Ç—ã:', '—Å–≤—è–∑—å:' –∏–ª–∏ –ø–æ–¥–æ–±–Ω—ã–µ - –∏–∑–≤–ª–µ–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n"
                    "2. –î–ª—è Telegram –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤–æ–∑–≤—Ä–∞—â–∞–π —Ç–æ–ª—å–∫–æ —á–∏—Å—Ç—É—é —Å—Å—ã–ª–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ https://t.me/XXXX –∏–ª–∏ tg://user?id=XXXXXXX \n"
                    "3. –ï—Å–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç —É–∫–∞–∑–∞–Ω –∫–∞–∫ @username - –æ—Å—Ç–∞–≤—å —Ç–∞–∫ –∂–µ\n"
                    "4. –¢–µ–ª–µ—Ñ–æ–Ω–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ –∏ –¥—Ä—É–≥–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –æ—Å—Ç–∞–≤–ª—è–π –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π\n"
                    "5. –í—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –∏–∑–º–µ–Ω—è–π\n\n"
                    "6. –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ 'https://www.cian.ru/', —Ç–æ –æ—Å—Ç–∞–≤–ª—è–π –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π\n"
                    "7. –í–æ–∑–≤—Ä–∞—â–∞–π —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Å—Å—ã–ª–∫—É –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å —á–µ–ª–æ–≤–µ–∫–∞, –Ω–∏–∫–∞–∫–∏—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ –¥—Ä—É–≥–∏–µ –±–æ—Ç—ã –∏ –∫–∞–Ω–∞–ª—ã\n"
                    "8. –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∏–∑–≤–ª–µ–∫–∞–π —Ç–æ–ª—å–∫–æ –µ–≥–æ, —Å—Å—ã–ª–∫–∏ –Ω–µ –Ω—É–∂–Ω—ã\n"
                    "–ü—Ä–∏–º–µ—Ä—ã –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:\n"
                    "1. '–ö–æ–Ω—Ç–∞–∫—Ç—ã: [–ê–Ω–Ω–∞](tg://user?id=12345)' ‚Üí 'tg://user?id=12345'\n"
                    "2. '–ù–∞–ø–∏—Å–∞—Ç—å: @ivanov' ‚Üí @ivanov\n"
                    "3. '–¢–µ–ª–µ—Ñ–æ–Ω: +79161234567' ‚Üí –æ—Å—Ç–∞–≤–∏—Ç—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π\n"
                    "4. '–ö–æ–Ω—Ç–∞–∫—Ç—ã: [–ú–µ–Ω–µ–¥–∂–µ—Ä](https://t.me/manager)' ‚Üí https://t.me/manager\n\n"
                    "5. '–¶–∏–∞–Ω, –∫–æ–Ω—Ç–∞–∫—Ç—ã (https://www.cian.ru/rent/flat/319392264) —É—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è –Ω–∏–∑–∫–∏–π ‚ö†Ô∏è (http://t.me/lvngrm_msk/26)–≤—ã–ª–æ–∂–∏—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É –±–µ—Å–ø–ª–∞—Ç–Ω–æ (http://t.me/lvngrm_bot?start=PM)' ‚Üí https://www.cian.ru/rent/flat/319392264\n\n"
                    "–í–∞–∂–Ω–æ: –≤–æ–∑–≤—Ä–∞—â–∞–π —Ç–æ–ª—å–∫–æ –û–î–ù–£ —Å–∞–º—É —Å—Å—ã–ª–∫—É, –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è! –ï—Å–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –Ω–µ—Ç - –æ—Ç–≤–µ—Ç—å '–Ω–µ—Ç'. @keys_manager - –ù–ï –ø–æ–¥—Ö–æ–¥–∏—Ç"
                    "–ø—Ä–∏–º–µ—Ä: '–Ω–µ—Ç'"
        },
        {
            "role": "user",
            "text": text,
        },
    ]
    result = (
        sdk.models.completions("yandexgpt").configure(temperature=0.5).run(messages_1)
    )
    return result.text


def safe_process_text_with_gpt(text: str, force: bool = False) -> str:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ Yandex GPT.
    - force=True: –≤—Å–µ–≥–¥–∞ –≤—ã–∑—ã–≤–∞–µ—Ç GPT (–¥–ª—è —Ñ–æ—Ç–æ+—Ç–µ–∫—Å—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π)
    - force=False: –ø—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è
    """
    text = (text or "").strip()
    if not text and not force:
        logger.warning("‚ö†Ô∏è GPT: –ü—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç –±–µ–∑ force=True, –ø—Ä–æ–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏")
        return ""
    try:
        sdk = YCloudML(folder_id=os.getenv("FOLDER_ID"), auth=os.getenv("AUTH"))
        messages_1 = [
            {"role": "system", "text": "–ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –æ–±—ä—è–≤–ª–µ–Ω–∏–µ: –∫–æ–º–Ω–∞—Ç—ã, —Ü–µ–Ω–∞, –∞–¥—Ä–µ—Å, —É—Å–ª–æ–≤–∏—è, –æ–ø–∏—Å–∞–Ω–∏–µ. –î–æ–±–∞–≤—å —ç–º–æ–¥–∑–∏."},
            {"role": "user", "text": text or "–û–±—ä—è–≤–ª–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ"},
        ]
        result = sdk.models.completions("yandexgpt").configure(temperature=0.5).run(messages_1)
        result_text = (result.text or "").strip()
        if not result_text:
            logger.warning("‚ö†Ô∏è GPT –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç, –ø–æ–¥—Å—Ç–∞–≤–ª—è—é –∑–∞–≥–ª—É—à–∫—É")
            return "–û–±—ä—è–≤–ª–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ"
        logger.info(f"‚úÖ GPT –æ–±—Ä–∞–±–æ—Ç–∞–ª —Ç–µ–∫—Å—Ç. –î–ª–∏–Ω–∞: {len(result_text)}")
        return result_text
    except Exception as e:
        logger.error(f"‚ùå GPT –æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞: {e}", exc_info=True)
        return "–û–±—ä—è–≤–ª–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ"
